title: Speaking
type: keep-width
items:
- title: CascadiaJS 2018
  image:
    href: home/speaking/cascadia.jpg
    alt: Atishay Jain at CascadiaJS 2018
    width: 500
    height: 282
    anchor: Top
  icon:
    href: home/speaking/cascadia.svg
    width: 150
  content: Ever tried calling C++ from Node or Electron. Hate native modules because of the compilation and maintenance issues. This talk is all about the solution to this problem - N-API that is stable with node 10. C++ to Node.js interop is a lot of fun.
  links:
    - href: https://2018.cascadiajs.com/speakers/atishay-jain/
      icon: external-link
      title: Official Website
    - href: https://www.youtube.com/watch?v=E0w7Tc0f2fA
      icon: youtube
      title: View
    - href: https://n-api.herokuapp.com/
      icon: play
      title: Try
    - href: https://github.com/atishay/napi
      icon: github
      title: code
- title: Byteconf JS 2019
  image:
    href: home/speaking/byteconf.jpg
    alt: Atishay Jain at Byteconf 2019
    width: 500
    height: 282
    anchor: Top
  content: Async-await even though is called as syntactic sugar, is much more. It enables many of the classic design pattern which were reserved for synchronous code not with async ones. Some ideas that were too complicated to implement with synchronous code are very easy with async. It has given new definitions to methods like memoize and also to wrapping methods for performance measurement. In this talk Atishay will discuss the new design patterns enabled by async-await. This talk is about the tricks that are too complicated to write with traditional JS code but are extremely easy to write with async. Open your eyes to modern JS - things that we were missing from right under our nose because we did not see async await the way it should have been - but instead as syntactic sugar.
  icon:
    href: home/speaking/byteconf-logo.jpg
    width: 65
  links:
    - href: https://www.byteconf.com/js-2019
      icon: external-link
      title: Official Website
    - href: https://www.youtube.com/watch?v=8rwOJfBcJ9c
      icon: youtube
      title: View
    - href: home/Falling in love with async await.pdf
      icon: file-powerpoint-o
      title: Slides
- title: DevNet Create 2019
  image:
    href: home/speaking/devnet.jpg
    alt: Atishay Jain at Cisco DevNet Create 2019
    width: 500
    height: 281
    anchor: Center
  content: When we think of node - we think of the server. Node is much more. It is the best solution for any I/O bound operations - even background processes running on customer machines. In this talk, Atishay will present the architecture of a unique node based application - a background process that acts like the browser’s “service worker” - downloading and caching resources even before the page is requested. Getting consistent, fast and effective performance based on network based data where the user can be offline is tricky - this talk will show how it is done. This talk will present the key components of the API that can provide cloud native experiences successfully at scale. Atishay works on Adobe’s CCXProcess, a unique application that is a node reverse proxy server, providing data driven by the server onto machines that can be offline for major parts of the day.
  icon:
    href: home/speaking/devnet-logo.jpg
    width: 116
  links:
    - href: https://developer.cisco.com/devnetcreate/2019/speaker
      icon: external-link
      title: Official Website
    - href: home/Running node.js on customer machines.pdf
      icon: file-powerpoint-o
      title: Slides
- title: JAMstackconf SF 2019
  image:
    href: home/speaking/jamstackconf.jpg
    alt: Atishay at Jam Stack Conference 2019
    width: 500
    height: 281
    anchor: Center
  content: By definition, a static website does not have a server. Then how, with the JAM stack can we really have a good shopping cart. This talk will have a demo of a system where no dynamic code is written on the server and a fully functional e-commerce website is presented using a static site builder, some APIs and JavaScript. Not every e-commerce system needs to be as dynamic as Amazon, and therefore should not use the same stack. You can avoid on-call work, constant updates and maintenance efforts when you use a CDN to host your shopping cart and get great performance to go along with it.
  icon:
    href: home/speaking/jamstackconf.svg
    width: 116
  links:
    - href: https://jamstackconf.com/sf/
      icon: external-link
      title: Official Website
    - href: home/Ecommerce using static websites.pdf
      icon: file-powerpoint-o
      title: Slides
    - href: https://www.youtube.com/watch?v=JO48ooTpOOA
      icon: youtube
      title: View
- title: Frankfurt Rhein-Main Gophers
  image:
    href: home/speaking/gofrm.jpeg
    alt: Atishay at Frankfurt Gophers Group 2021
    width: 500
    height: 281
    anchor: Center
  content: Hugo is interesting to Go developers as despite being ageneric tool that you don't need to learn Go for, it does some things very Go like. From using the Go terminology (e.g. slice) to the Go modules there is a lot of familiarity that a Go developer will find in the Hugo world. This talks interroduces Hugo to the Go developers and talks about how Go and Hugo are close. If you know Go, take a look at the source code. You will find some real hidden gems.
  icon:
    href: home/speaking/gofrm-icon.png
    width: 60
  links:
  - href: https://www.meetup.com/gophers-frm/
    icon: meetup
    title: Meetup
